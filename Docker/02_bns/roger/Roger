*/
19.12.19
Физическая разбивка дисков - Это самый простой, надежный и совместимый «дедовский» метод. 
Он позволяет четко очертить границы разделов и их взаимное положение на диске.
При разбивке диска можно учесть его физические особенности и получить некоторый прирост производительности. 

Логическая разбивка дисков
Не бойтесь LVM — он не такой страшный. 
С его помощью можно переразбивать диски, расширять партиции, добавлять физические устройства и расширяться на них, делать теневое копирование, бекап аналогичный «time machine» появился еще примерно в 2002 году. 
Не бойтесь, делайте бекап и пользуйтесь гибкостью LVM.
Для работы LVM, MD, DM обязательно нужен физический раздел /boot который позволит загрузчику(grub, Lilo etc) скачать минимальный образ системы (initrd) с необходимыми драйверами и конфигами для старта основной системы.

1) Разбила диски на 1 primary - 4,5; 2 logical - 1 и 3,5
8 Gb - fdisk -l
lsblk - используется, чтобы узнать инфо о всех блочных устройствах, которыми являются разделы жестких дисков
и других устройств хранения данных (оптических приводов, флэш-накопителей)
lsblk -a - все блочные устройства в вашей системе


Обновление индекса пакетов: Индекс пакетов APT по существу база данных доступных пакетов из репозиториев, определенных в файле /etc/apt/sources.list и каталоге /etc/apt/sources.list.d . 
Для обновления локального индекса пакетов до последних изменений в репозиториях наберите следующее:

sudo apt-get update
Обновление пакетов: Со временем обновленные версии установленных на вашем компьютере пакетов могут стать доступными в репозиториях (например, обновления безопасности). 
Для обновления вашей системы сначала обновите ваш индекс пакетов, как показано выше, а затем выполните:

sudo apt-get upgrade

2) Проверила установленные - apt list --installed

3) Обновила индекс пакетов и пакеты - apt-get update -y && apt-get upgrade -y

-y - ключ быстрого согласия

4) Установила vim и sudo - apt-get install -y sudo vim

+++++++++ДЛЯ ИНИТ++++++++++++++
5) Подключение к ssh с компа на виртуальную машину:

- settings - network - Advanced - Port Forwarding:
создание правил:
http tcp 127.0.0.1 8000 10.0.2.15 80
ssh tcp 127.0.0.1 2200 10.0.2.15 22

- пишем в терминале ssh -p 2200 aagrivan@127.0.0.1
жмем "yes" и вводим пароль виртуальной машины

++++++++++++++END+++++++++++++++

6) Дала права к sudo учетной записи aagrivan - usermod -aG sudo aagrivan

usermod - изменяет учетную запись пользователя
-a - добавить пользователя в дополнительную группу(ы). Использовать только вместе с параметром -G.
-G, --groups ГРУППА1[,ГРУППА2,...[,ГРУППАN]]]
Список дополнительных групп, в которых числится пользователь. Перечисление групп
осуществляется через запятую, без промежуточных пробелов. На указанные группы
действуют те же ограничения, что и для группы указанной в параметре -g.

/etc/sudoers - добавляем NOPASSWD
gde     ALL=(ALL:ALL) NOPASSWD:ALL


7) Для обновления прав перезагрузила виртуальую машину. Then reboot the VM:
sudo reboot

20.12.19

* We don’t want you to use the DHCP service of your machine. You’ve got to
configure it to have a static IP and a Netmask in \30.

DHCP (Dynamic Host Configuration Protocol) - протокол динамической настройки узла - IPv4 (DHCPv4), так и для IPv6 (DHCPv6).
Сетевой протокол, позводяющий сетевым устройствам автоматически получать IP-адрес и другие параметры,
необходимые для работы в сети TCP/IP. Данный протокол работает по модели "клиент-сервер".

99% of Windows internet users use what are called “dynamic” IP addresses. 
That means each time you connect to the internet, your ISP assigns you an IP address to use when you connect. 
The next time you connect, you might get a different address. sud
If you’re only connecting out to the internet, that’s all you need.
If you expect people to connect in, say you want to run a web server that you want people to be able to find and visit, you’ll most likely need a static IP address. 
A static IP is assigned by your ISP to you permanently, and identifies your server to the world.

8) Установила netstat - инструмент для мониторинга входящих и исходящих сетевый подключений.

sudo apt install net-tools -y
netstat -rn - вывод таблицы маршрутизации в цифровом формате. Ключ -n - вместо хоста номер IP, 
номер порта вместо имени порта, UID вместо имени пользователя - в цифровом формате.

Подключаем второй виртуальный интерфейс - settings - adapter2 - enable network Adapter - host-only Adapter
vboxnet0 (сам)

File - Host network manager - vboxnet0 192.168.56.1/30

Для смены IP с динамического на статический (чтобы стучаться на собственный сайт) открываем файл /etc/network/interfaces. И закомментируем линию
iface enp0s3 inet dhcp (назначение динамического адреса для интерфейса enp0s3). inet dhcp - указывает на
динамический адрес.

auto lo - старт при загрузке
iface lo inet loopback - интерфейс обратной петли lo, локальный интерфейс другими словами.
allow-hotplug enp0s3 - инициализация интерфейса enp0s3 при определении ядром, грубо говоря запуск.

Прописываем:
auto enp0s8
iface enp0s8 inet static
address 192.168.56.2 
netmask 255.255.255.252

№№№№№№№№№№№№№№№№№№ НЕ ЗАБУДЬ СДЕЛАТЬ 3 КЛОНА ROGER ##################################

sudo service networking restart

sudo ifup enp0s3

ip a - появился второй виртуальный интерфейс, enp0s3 - для инета, enp0s8 - статический для сервера

#!!!!!
# Open ‘ /etc/sysctl.conf ’ in order to disable IPv6 on all the interfaces and make this setting as a default one and 
add the following at the bottom of the file:
net.ipv6.conf.all.disable_ipv6=1 
net.ipv6.conf.default.disable_ipv6=1 
net.ipv6.conf.lo.disable_ipv6=1 
net.ipv6.conf.enp0s3.disable_ipv6=1

Отключаем ipv6 для безопасности - так как на IPv6 есть автоконфигурация.
В отличие от своего предшественника, DHCP для IPv4, IPv6 не требует ручной настройки. 
Эта функция авто-конфигурации означает, что "устройства с поддержкой IPv6 просто ждут одного единственного уведомления маршрутизатора, 
чтобы идентифицировать себя в сети", сказал Эрик Винке, ведущий системный инженер в Cisco и соавтор книги "IPv6 Security".

Он предупредил, что "маршрутизаторы и свичи с поддержкой лишь IPv4 не распознают и не отвечают на уведомления устройств с IPv6, 
но преступный маршрутизатор с поддержкой IPv6 способен слать и перехватывать этот трафик".

Авто-конфигурация позволяет устройствам с IPv6 связываться с другими такими устройствами и службами в сети в пределах одной LAN. 
Для этого устройство уведомляет о своем присутствии и обнаруживается с помощью IPv6 Neighbor Discovery Protocol (NDP).

Но оставшись без присмотра, NDP может начать действовать чересчур по-добрососедски, и подвергнуть устройства действиям хакеров, 
которым не терпится разузнать, что происходит внутри сети, или даже позволить устройству быть захваченным и превращенным в "зомби".
#!!!!!!


22.12.2019
* You have to change the default port of the SSH service by the one of your choice.
SSH access HAS TO be done with publickeys. SSH root access SHOULD NOT
be allowed directly, but with a user who can be root.

Порт прослушивания (порт для входящих соединений или порт сервера) используется программой, ждущей приглашений
к соединениям от других программ. «Недоступным» порт прослушивания называют, когда эти приглашения не приходят, 
а пропадают где-то по дороге. Ещё такой порт часто называют «закрытым», поэтому шаги, делающие порт доступным,
называют «открытием порта».

Порт — это просто любое условное число от 0 до 65535. Порт принято записывать как 16 битное число.
Теоретически номер порта ни на что не влияет. Важно только, чтобы этот порт был свободен. 
Впрочем, если ваша программа при запуске обнаружит, что указанный вами порт занят (т.е. его уже слушает 
какая-то другая программа на вашем компьютере), то она вам сразу пожалуется сама.

Сетевой порт — идентифицируемый номером системный ресурс, выделяемый приложению, выполняемому на некотором 
сетевом хосте, для связи с приложениями, выполняемыми на других сетевых хостах 
(в том числе c другими приложениями на этом же хосте).

Сетевой порт – это сетевой ресурс, отображаемый в виде числа, которое определяет назначение входящих или 
исходящих сетевых потоков данных на заданном устройстве.

Для каждого из протоколов TCP и UDP стандарт определяет возможность одновременного выделения на хосте до 65536
уникальных портов, идентифицирующихся номерами от 0 до 65535. При передаче по сети номер порта в заголовке 
пакета используется (вместе с IP-адресом хоста) для адресации конкретного приложения 
(и конкретного, принадлежащего ему, сетевого соединения).

Порты могут разделяться на три группы:
Общеизвестные (системные), их диапазон от 0 до 1023 закреплен стандартами организации IANA;
Зарегистрированные в организации IANA (пользовательские), их диапазон от 1024 до 49151;
Динамические (частные), диапазон которых находится между 49152 и 65535.

9) Создаем идентификационный ключ RSA, чтобы иметь возможность заходить на удалённый сайт с вашей учётной 
записи без ввода пароля.

!!!! После такой настройки, если взломщик проникнет в вашу учётную запись или сайт, он получит доступ к сайту 
с вашими правами, также не вводя пароль! Поэтому это никогда не следует делать от лица пользователя root.!!!!

Делаем не на виртуальной машине:
ssh-keygen -t rsa - создаем частный и публичный ключи и сохранены в 2 файлах. 
-t rsa specifies the type of encryptation to RSA – Rivest–Shamir–Adleman Encryptaion Algorithm

id_rsa - is a private key and should be securely kept, can be encrypted with a passphrase; 
id_rsa.pub is a public key, should be copied and stored on the VM.

Пробросила порты виртуальной машины:
- settings - network - Advanced - Port Forwarding:
создание правил:
http tcp 8000 80
ssh tcp 50001 50001

Просмотр портов:
sudo netstat -ltup
Флаг -l указывает netstat вывести все прослушивающие сокеты (сокет это ip + порт), 
-t показывает все TCP-соединения, -u отображает все соединения UDP, 
а -p позволяет выводить имя приложения/программы, прослушивающее порт.

Поменяла SSH default port of the VM open:
Файл /etc/ssh/sshd_config
#Comment the line 13 (‘P  ort 22 ’) if it is not yet, then add a new rule ‘ Port  <desired port> ’ on a new line. 
It is recommended to use ports from 50000 and higher. Port 50001
#Comment the line 33 (‘ PermitRootLogin prohibit-password ’) if it is not yet and add a new one ‘ PermitRootLogin no ’ 
in order to disable root login via SSH.
#Commenttheline58(‘ PasswordAuthentication yes’ )ifitisnotyet and add a new one ‘ PasswordAuthentication no ’ 
in order to disable SSH login with a password so as to connect to the VM via SSH with RSA keys only.

# Restart SSH daemon on the VM:
sudo service sshd restart

10) Отправляем на VM:
!!! Если существует файл .ssh/known_host - его нужно удалить в случае ошибки WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!
Так как ключи ssh поменялись и поэтому в целях безопасности система не дает доступа.

ssh-copy-id -i ~/.ssh/id_rsa.pub aagrivan@localhost -p 50001

• You have to set the rules of your firewall on your server only with the services used
outside the VM.

11) Установила брандмауэр UFW - sudo apt install ufw -y
# Show processes that listen ports:
sudo lsof -i - (List Open Files) - программа для получения информации о запущенных в системе процессах и потоках. 
Опция -i позволяет вывести сведения о файлах, интернет-адреса которых соответствуют заданному адресу. 
Если при вызове команды не задавать адреса, эта опция позволяет вывести сведения обо всех интернет-сокетах и сетевых файлах.
netstat -tulpn
Чтобы выводить числовые значения (номер порта), а не имена служб, добавьте флаг -n.

# Show processes that listen ports:
sudo lsof -i
netstat -tulpn
# Open file ‘ /etc/default/ufw ’, comment the line 7 and add a new one:  IPV6=no

# Enable firewall and create new rules for SSH, HTTP & HTTPS running the following commands:
sudo ufw enable - активировать/включить ufw
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow 22222/tcp - у меня 50001 порт поэтому - sudo ufw allow 50001/tcp
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp
sudo ufw logging low - опция сохранения логов - регистрирует все заблокированные пакеты, не соответствующие заданной политике 
(с ограничением скорости), а также пакеты, соответствующие зарегистрированным правилам.
sudo ufw reload
sudo ufw status verbose

###Check the VM's firewall rules:
sudo ufw status verbose


• You have to set a DOS (Denial Of Service Attack) protection on your open ports
of your VM.

# Install  nginx  web server:
sudo apt install nginx -y 
sudo service nginx status

# Edit  nginx  configuration file and increase the number of simultaneous connections:
sudo vim /etc/nginx/nginx.conf

# Comment the line 7 ‘ worker_connections 768; ’, add a new one below ‘ worker_connections 20000; ’ and then restart the web server: 
Параметр worker_connections:
— Общее максимальное количество обслуживаемых клиентов будет равно worker_processes * worker_connections;

sudo service nginx restart

# Install  fail2ban :
sudo apt install fail2ban -y 
sudo service fail2ban status
sudo service fail2ban stop

# Create a new file ‘ /etc/fail2ban/jail.local ’ and add to it: 
[nginx-dos]
# Any IP requesting more than 240 pages in 60 seconds, # or 4 p/s average, is suspicious. Block it for two full days.
enabled = true  -----  вкл тюрьмы
port = http  -----  порт сервиса, на который ссылается Fail2ban. Если используется порт по умолчанию, тогда можно использовать имя сервиса.
filter = nginx-dos  -----  фильтр, который будет использоваться.
logpath = /var/log/nginx/access.log   -----  расположение логов сервиса
findtime = 60   -----  Переменная maxretry устанавливает разрешенное клиенту количество попыток аутентификации во временном окне findtime
bantime = 172800  -----  бан на 2 дня
maxretry = 240

[ssh]
enabled = true # активируем данное правило ( включаем его).
port = ssh # указываем порт, он будет заблокирован для хоста
filter = sshd # файл-фильтр с правилами для блокировки который используется для этого правила
logpath = /var/log/auth.log # путь где будет лежать наш log-файл
maxretry = 4 # задаем количество попыток ввода пароля, после чего хост будет заблокирован на bantime секунд (по-умолчанию берется из переменной 
bantime в секции [DEFAULT]).

#  Create a file ‘ /etc/fail2ban/filter.d/nginx-dos.conf’  and add to it:
[Definition]
# Option: failregex
# Notes.: Regexp to catch a generic call from an IP address.
# Values: TEXT
failregex = ^<HOST> -.*"(GET|POST).*HTTP.*"$
# Option: ignoreregex
# Notes.: regex to ignore. If this regex matches, the
line is ignored.
# Values: TEXT
#
ignoreregex =

Регулярные выражения:
^ - начало текста
$ - конец текста
. - любой одиночный символ
* - предыдущий символ повторяется 0 и более раз
" - поиск первой ", то есть нашли первую кавычку. Дальше, пока выполнялось условие брали следующие символы (в том числе и ") и делали, 
пока последней не оказалась "

# Then restart  fail2ban :
sudo service fail2ban restart
sudo fail2ban-client status
sudo fail2ban-client status nginx-dos

# The first way to implement a DOS attack is to run ‘ Slowloris ’ (DOS attack tool) on your mac (not to the VM) so as to use it against the VM. 
Download it.

# Open its source code and comment the line 4 if necessary (it is needed if you have not setup SSL for your VM's web server yet).

# Check the status of the  fail2ban  profile ‘ nginx-dos ’: 
sudo fail2ban-client status nginx-dos

# Send a request to the VM's web server – open a browser on your mac and enter your VM's IP address. 
Make sure that the VM's web server is accessible on your mac and you can access its default web page through the mac's browser. 
Then run ‘ slowloris.pl ’ from your mac in the following way:

chmod +x slowloris.pl
perl slowloris.pl -dns  <host computer IP>: <mac port
that forwards to the VM's HTTP port>    ------      perl slowloris.pl -dns 127.0.0.1:8000 perl slowloris.pl -dns 192.168.56.2:443

# After that VM's web server would be attacked.  fail2ban  should read nginx 's logs, find there a lot of sudden requests and ban the IP address 
of the client which sends so many requests to the web server therefore you won't be able to see the VM web server's web page from the computer 
you have run  Slowloris  but the web page should be accessible when requesting it from other computers. 
See the list of the IP addresses that are banned:

sudo fail2ban-client status nginx-dos

# You can then unban1 some IP addresses so as to repeat the attack:
sudo fail2ban-client set nginx-dos unbanip < banned IP address>   -----   sudo fail2ban-client set nginx-dos unbanip 10.0.0.2

# The second way to implement a DOS attack is to use Apache HTTP server benchmarking tool that is already installed on your mac.
# Run Apache HTTP server benchmarking tool in the following way:
ab -n 10000 -c 50 http:// <mac's IP address> : <mac port that forwards to the VM's HTTP port>  ----  ab -n 10000 -c 50 -r http://127.0.0.1:8000/
ab -n 10000 -c 50 -r http://127.0.0.1:8000/ready

# After that VM's web server would be attacked.  fail2ban  should read nginx 's logs, find there a lot of sudden requests and ban the IP address 
of the client which sends so many requests to the web server therefore you won't be able to see the VM web server's web page from the computer 
you have run  Slowloris  but the web page should be accessible when requesting it from other computers.

# Now let's make sure  fail2ban  can stop SSH login brute-forcing. Note that  fail2ban  by default won't work when:
1) an attacker have a correct RSA private key but enters a wrong passphrase.
2) an attacker does not have a correct RSA private key but tries to log in as an existing user (a user that exists on the VM).
By default  fail2ban  should ban when an attacker tries to log in as a user that does not exist on the VM 5 times in a row. 
You can try such kind of attacks and then check  fail2ban  status:
sudo fail2ban-client status ssh

# The output of that command should consist of a list of IP addresses that have been banned. You can then unban some IP addresses so as 
to repeat the attack:
sudo fail2ban-client set sshd unbanip < banned IP address>  -----  ssh -p 50001 emanon@localhost



• You have to set a protection against scans on your VM’s open ports.

# Install  PortSentry , an attack detection tool:
sudo apt install portsentry -y

# Open the file ‘sudo vim  /etc/default/portsentry’, comment the lines9 and 10 (‘TCP_MODE="tcp"’, ‘ UDP_MODE="udp"’)andadd two ones below them:
TCP_MODE="atcp"
UDP_MODE="audp"

Мы используем portsentry в расширенном режиме для протоколов TCP и UDP. 
Для этого необходимо изменить файл /etc/default/portsentry для того чтобы иметь TCP_MODE="atcp" и UDP_MODE="audp"

# Open the file ‘/etc/portsentry/portsentry.conf’, comment the lines 35 and 36 ( BLOCK_UDP="0", BLOCK_TCP="0" ) and add two ones below them:
BLOCK_UDP="1"
BLOCK_TCP="1"

# Какие телодвижения предпринимать при обнаружении сканирования:
# 0 = ничё не делать - некатит, такая опция :)
# 1 = заблокировать хост и запустить внешнюю команду
# 2 = только запустить внешнюю команду

# Restart  PortSentry  and see its status:
sudo systemctl restart portsentry
sudo systemctl status portsentry

Portsentry от Psionic Technologies – один из трех компонентов системы обнаружения вторжения TriSentry. 
Главная цель PortSentry – обнаружить сканирование портов на хосте и отреагировать на такие просмотры. 
Это - одна из причин, по которой PortSentry должен рассматриваться, как утилита обнаружения вторжения. 
Если атакующий не знает заранее, какие порты открыты и доступны в системе, он начнет сканирование, для того чтобы определить доступные сервисы. 
В этот момент вступает в игру PortSentry. Инструмент контролирует и UDP порты на системе и, в зависимости от конфигурации, 
ответит на идентифицированный просмотр. PortSentry контролирует TCP и UDP просмотры и способен обнаруживать большинство методов 
скрытого сканирования инструментами, типа Nmap.

# See the processes that listen ports:
sudo lsof -i

# or:
netstat -tulpn

# See the list the open ports
sudo apt install nmap -y
# or:
nmap --open localhost

• Stop the services you don’t need for this project.

# Print out at the active services:
sudo service --status-all
systemctl list-unit-files --type service --state enabled

# You'll see the list of active and enabled services run on the VM. You may leave only the following ones: 
cron - служба выполнения задач по расписанию,
dbus - простая система межпроцессного обмена сообщениями (фоновая служба и утилиты),
fail2ban - блокирование хостов, с которых делаются безуспешные попытки войти в систему,
kmod - этот пакет содержит набор программ для загрузки, подключения и удаления модулей ядра Linux,
networking - связанные с сетью модули,
nginx - small, powerful, scalable web/proxy server,
portsentry - portscan detection daemon,
procps - утилиты для файловой системы /proc,
rsyslog - гибкая служба ведения протокола работы системы и ядра,
ssh - оболочка и сервер SSH (метапакет),
udev - служба управления устройствами в /dev/,
ufw - program for managing a Netfilter firewall,
systemd-timesyncd - служба, которая была добавлена для синхронизации системных часов по сети,
syslog - протокол передачи текстовых сообщений, прежде всего логов — сообщений о происходящих событиях,
getty - программа для UNIX-подобных операционных систем, управляющая доступом к физическим и виртуальным терминалам (tty),
autovt - связана с getty, если отключить вырубается консоль, символическая ссылка на getty@.service
console-setup - настройка шрифта и раскладки клавиатуры для консоли. 
keyboard-setup.service #Configuration for the keyboard   ??????? включить может быть
AppArmor - это реализация Модуля безопасности линукс по управлению доступом на основе имен. 
AppArmor ограничивает отдельные программы набором перечисленных файлов и возможностями в соответствии с правилами Posix 1003.1e.

*avahi-daemon.service - Служба обнаружения сетевых устройств
*cups.service - Службы поддержки печати
*cups-browsed.service - Службы поддержки печати

Disable and remove from autoload the other services with the commands (both should be run for each particular service):
sudo systemctl stop  <service>
sudo systemctl disable  <service>

• Create a script that updates all the sources of package, then your packages and
which logs the whole in a file named /var/log/update_script.log. Create a scheduled
task for this script once a week at 4AM and every time the machine reboots.

# Create a new file ‘/var/log/update_script.log’ and edit its permissions:
sudo chmod 666 /var/log/update_script.log
666 (-rw-rw-rw-) - все пользователи могут читать и редактировать

# Create a new script ‘/etc/cron.d/update_packages.sh’ and edit its permissions:
sudo chmod +x /etc/cron.d/update_packages.sh

# Add the following to the file ‘/etc/cron.d/update_packages.sh’:

#!/bin/sh
LOG="/var/log/update_script.log"
sudo apt-get update -y | tail -n1 > $LOG       //// обновить и записать последнюю 1 строчку в переменную LOG, количество строк для выдачи через ключ —n
sudo apt-get upgrade -y | tail -n1 >> $LOG     //// апрейднуть и записать последнюю 1 строчку вниз файл переменной LOG
DATE=$(date +%d.%m.%Y)                      //// команда date - выводит время; команда " date +%d.%m.%Y " - формат времени 21.01.2020
TIME=$(date +%T)                            //// команда выводит время в формате 18:03:44
**team="R4Y7r4c1N9_C4P031R4"                //// название тимы
echo "\033[0;33mLast update: $DATE, $TIME \033[m" >> $LOG     //// желтый цвет вывода
**echo "created by\033[0;31m $team \033[m"                //// красный цвет вывода
exit

https://habr.com/ru/post/119436/ - цветной man, разукрасить вывод echo

# Edit the file ‘ /etc/crontab ’ and add these lines of text to it: 
@reboot    root /etc/cron.d/update_packages.sh    //// при загрузке/ребуте выполняет скрипт
0 4 * * 1  root /etc/cron.d/update_packages.sh    //// в 4 утра каждый пнд выполняет скрипт

# Restart  cron  like that:
systemctl restart cron
systemctl status cron

• Make a script to monitor changes of the /etc/crontab file and sends an email to
root if it has been modified. Create a scheduled script task every day at midnight.

# Install mailutils in order to be able to send emails:
sudo apt-get install mailutils -y

Mailutils — это швейцарский нож для работы с электронной почтой. Он предоставляет богатый набор утилит и демонов для обработки электропочты. 
Все они поддерживают почтовые ящики любых существующих форматов — от стандартных UNIX'овых maildrop'ов до maildir и удалённых ящиков, 
предоставляющих прозрачный доступ через IMAP4, POP3 и SMTP. У Mailutils три целевые аудитории — обычные пользователи, системные администраторы 
и разработчики обрабатывающего электропочту ПО.

# Create a file ‘/etc/cron.d/monitor_changes.sh’  and change its permissions:
sudo chmod +x /etc/cron.d/monitor_changes.sh

# Add the following code to the ‘/etc/cron.d/monitor_changes.sh’: 
#! /bin/sh
MSG="File /etc/crontab has been modified!" 
SUBJECT="Monitor changes crontab"
TO="root@localhost,diana_ust@mail.ru"
HASH="/etc/cron.d/hash.txt"
FILE="/etc/crontab"
test -f $HASH || sudo touch $HASH           ///// || - первая команда исполняется всегда, вторая — только в случае неудачного завершения первой
CRON_HASH=$(sudo md5sum $FILE)
if [ "$(cat $HASH)" != "$CRON_HASH" ]; then
     echo $CRON_HASH > $HASH
    echo $MSG | mail -s "$SUBJECT" $TO     ///// -s : опция задает тему для письма
fi;
exit

Команда test -- это встроенная команда Bash, которая выполняет проверки файлов и производит сравнение строк. 
Таким образом, в Bash-скриптах, команда test не вызывает внешнюю (/usr/bin/test) утилиту, которая является частью пакета sh-utils. 
Аналогично, [ не производит вызов утилиты /usr/bin/[, которая является символической ссылкой на /usr/bin/test.

md5sum — программа, позволяющая вычислять значения хеш-сумм (контрольных сумм) файлов по алгоритму MD5. В обычном случае вычисленные хеши 
выводятся (можно сохранить в файле, для последующего использования). В других случаях программа сверяет вычисленные значения со значениями, 
сохранёнными в файле (это удобно для массовой проверки целостности файлов).
Наиболее часто программа используется для проверки правильной загрузки файлов по сети.

# Add a line to the file ‘ /etc/crontab ’:
0 0 * * * root /etc/cron.d/monitor_changes.sh            ////@daily - каждый день в 12 ночи

# Restart  cron  and make sure root receives an email each time something has changed in ‘ /etc/crontab ’:
systemctl restart cron
systemctl status cron



Check that there is self-signed SSL on all services. If this is not the case, this test is failed.

# Install SSL on the VM using this manual for  nginx  web server:

# Replace the ‘ /etc/nginx/sites-available/default ’ active configuration file with a new one called for instance ‘ /etc/nginx/sites-available/active_conf ’ and add to it the following lines:
server {
listen  <VM's IP address>:  80;
server_name localhost: <mac port that forwards to
the VM's HTTPS port> ;
return 302 https://$server_name$request_uri;
}
server {
listen  <VM's IP address>:  443 ssl http2; include snippets/self-signed.conf; include snippets/ssl-params.conf;
     root /var/www/html;
     server_name _;
     location / {
           try_files $uri $uri/ =404;
     }
}
# Create a symbolic link:
sudo ln -s /etc/nginx/sites-available/ active_conf /etc/nginx/sites-enabled/ active_conf
# Then remove file ‘ /etc/nginx/sites-enabled/default ’. Restart nginx  and check its status:
sudo systemctl restart nginx
sudo systemctl status nginx